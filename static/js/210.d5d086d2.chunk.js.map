{"version":3,"file":"static/js/210.d5d086d2.chunk.js","mappings":"qQACA,EAA4B,0BAA5B,EAAmE,2BAAnE,EAAsG,sBAAtG,EAAqI,uB,6BCoErI,EA7De,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,+FACZC,EAAAA,EAAAA,IAAeJ,GAAaK,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACjB,IAAnBA,EAAQC,OAYZX,EAAgBU,GAXdE,EAAAA,GAAAA,MAAY,sCAA6B,CACvCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAKf,IAfiB,2CAAH,qDAiBbhB,GACFG,GAEH,GAAE,CAACH,IAEJ,IAIMiB,EAAetB,EAAauB,KAChC,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,eAA8BC,GAA9C,EAAgCC,aAAhC,EAA8CD,IAA9C,OACE,eAAeE,WAAS,EAAxB,UACE,SAAC,KAAD,CAASC,GAAE,kBAAcH,GAAzB,UACE,iBAAKE,UAAYE,EAAjB,WACE,gBACEC,IACEP,EAAW,8CACgCA,GADhC,8EAIbQ,IAAI,MAEN,cAAGJ,UAAYE,EAAf,SAA2BL,UAXvBC,EADZ,IAmBF,OACE,gCACE,SAAC,KAAD,CAAWO,YA1BK,SAAAC,GAClB9B,EAAgB,CAAE+B,MAAOD,GAC1B,IAyBKlC,GAAgBA,EAAaY,OAAS,GAAI,gBAAIgB,UAAYE,EAAhB,cAAiCR,MAAsB,gBAAKM,UAAYE,KACpH,SAAC,KAAD,MAGL,C,4MCjEDM,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMC,EAAoB,mCAAG,WAAOC,GAAP,yFACXH,IAAAA,IAAU,uBAAwB,CACvDI,OAAQ,CACND,KAAAA,KAH8B,uBAC1BL,EAD0B,EAC1BA,KAD0B,kBAM3BA,GAN2B,2CAAH,sDASpBO,EAAa,mCAAG,WAAMf,GAAN,yFACJU,IAAAA,IAAA,iBAAoBV,EAApB,oBADI,uBACnBQ,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,sDAObQ,EAAO,mCAAG,WAAMhB,GAAN,yFACEU,IAAAA,IAAA,iBAAoBV,EAApB,aADF,uBACbQ,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sDAKPS,EAAU,mCAAG,WAAMjB,GAAN,yFACDU,IAAAA,IAAA,iBAAoBV,EAApB,aADC,uBAChBQ,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVzB,EAAc,mCAAG,WAAOmC,EAAML,GAAb,yFACLH,IAAAA,IAAU,gBAAiB,CAChDI,OAAQ,CACNL,MAAOS,EACPL,KAAMA,KAJkB,uBACpBL,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,uD","sources":["webpack://react-homework-template/./src/Pages/Movies/Movies.module.scss?713e","Pages/Movies/Movies.jsx","shared/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Movies_movieList__di0l+\",\"imgWrapper\":\"Movies_imgWrapper__k6Y5D\",\"title\":\"Movies_title__7GsQB\",\"finder\":\"Movies_finder__ABv4O\"};","import { useState, useEffect } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport { Searchbar } from 'components';\nimport { getMoviesQuery } from \"shared/api\"\nimport s from \"./Movies.module.scss\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n  const [searchResult, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchValue = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const fetchSearch = async () => {\n      await getMoviesQuery(searchValue).then(({ results }) => {\n        if (results.length === 0) {\n          toast.error('ðŸ¦„ Sorry use another name', {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          })\n          return;\n        }\n        setSearchResult(results);\n      });\n    };\n    if (searchValue) {\n      fetchSearch();\n    }\n  }, [searchValue]);\n\n  const submitValue = data => {\n    setSearchParams({ query: data });\n  };\n\n  const renderMovies = searchResult.map(\n    ({ poster_path, original_title, vote_average, id }) => (\n      <li key={ id } className>\n        <NavLink to={ `/Movies/${id}` } >\n          <div className={ s.imgWrapper }>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/original/${poster_path}`\n                  : `https://img.freepik.com/free-vector/glitch-error-404-page_23-2148105404.jpg`\n              }\n              alt=\"\"\n            />\n            <p className={ s.title }>{ original_title }</p>\n          </div>\n        </NavLink>\n      </li>\n    )\n  );\n\n  return (\n    <section>\n      <Searchbar submitValue={ submitValue } />\n      { searchResult && searchResult.length > 0 ? <ul className={ s.movieList }> { renderMovies }</ul> : <div className={ s.finder }></div> }\n      <ToastContainer />\n    </section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '9408f4ad1863a9d272018e8be0447604',\n};\n\nexport const getMostPopularMovies = async (page) => {\n  const { data } = await axios.get('/trending/movie/week', {\n    params: {\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieForId = async id => {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`,\n  );\n\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n\nexport const getMoviesQuery = async (name, page) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      query: name,\n      page: page,\n    },\n  });\n  return data;\n};\n"],"names":["useState","searchResult","setSearchResult","useSearchParams","searchParams","setSearchParams","searchValue","get","useEffect","fetchSearch","getMoviesQuery","then","results","length","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","renderMovies","map","poster_path","original_title","id","vote_average","className","to","s","src","alt","submitValue","data","query","axios","api_key","getMostPopularMovies","page","params","getMovieForId","getCast","getReviews","name"],"sourceRoot":""}